# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Maven@3
  displayName: Maven build
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
#     goals: 'package'
# - task: Docker@2
#   inputs:
#     containerRegistry: 'Docker Hub'
#     repository: 'melcheng/ping-pong'
#     command: 'buildAndPush'
#     Dockerfile: '**/Dockerfile'
#     tags: '$(Build.Repository.Name):$(Build.BuildId)'
- task: CmdLine@2
  displayName: Docker Build
  inputs:
    script: 'docker build -t ''$(DOCKER_REPO_NAME):$(Build.BuildId)'' .'
- task: CmdLine@2
  displayName: Printing Variables
  inputs:
    script: 'echo $name is $(Build.Repository.Name) and buildid is $(Build.BuildId) and docker repo is $(DOCKER_REPO_NAME)'
- task: CmdLine@2
  displayName: List Docker Images
  inputs:
    script: 'docker images'
- task: Docker@2
  displayName: AquaSec Login
  inputs:
    containerRegistry: 'Aqua Registry 2'
    command: 'login'
- task: aquasecScanner@4
  displayName: Scann Docker Images
  inputs:
    image: '$(DOCKER_REPO_NAME):$(Build.BuildId)'
    scanType: 'local'
    register: true
    hideBase: false
    showNegligible: false
    windowsScannerVersion: '4.2.0'
    registry: 'local'
    connection: 'Aqua CSP'
    caCertificates: true
    scanMalware: true
    showWillNotFix: true